@model StoreMgmt.Models.Coil_model
@using System.Data
@using System.Data.SqlClient

@{
    ViewBag.Title = "CoilDataEdit";
    Layout = "~/Views/Shared/_AdminLayouts.cshtml";
}
<h2>Selected Coil For Edit</h2>
@using (Html.BeginForm("CoilDataEdit", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

<section class="content mt-3 ">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">General</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="inputName">Grade</label>
                        <input type="text" id="inputName" name="Code" value="@Model.Code" class="form-control">
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="inputName">CoilName</label>
                        <input type="text" id="inputName" name="CoilName" value="@Model.CoilName" class="form-control">
                        @Html.ValidationMessageFor(model => model.CoilName, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="inputName">Thickness</label>
                        <input type="text" id="inputThickness" name="Thickness" value="@Model.Thickness" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
                        @Html.ValidationMessageFor(model => model.Thickness, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="inputName">Width</label>
                        <input type="text" id="inputWidth" name="Width" value="@Model.Width" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label for="inputName">Weight</label>
                        <input type="text" id="inputWeight" name="Weight" value="@Model.Weight" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group">
                        <label for="inputName">Remark</label>
                        <input type="text" id="remark" name="remark" value="@Model.remark" class="form-control">
                        @Html.ValidationMessageFor(model => model.remark, "", new { @class = "text-danger" })

                    </div>
                
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-8 mx-auto  h-100 d-flex align-items-center justify-content-center">
            <a href="@Url.Action("CoilList")" style="width:200px;" class="btn btn-secondary btn-lg">Cancel</a>
            &nbsp;&nbsp; &nbsp;&nbsp;   &nbsp;&nbsp; &nbsp;&nbsp;
            <input type="submit" style="width:200px" value="Save" class="btn btn-success btn-lg ">
        </div>
    </div>

</section>
}