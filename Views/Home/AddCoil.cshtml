@model StoreMgmt.Models.Coil_model

@using System.ComponentModel.DataAnnotations;

@{
    ViewBag.Title = "AddCoil";
    Layout = "~/Views/Shared/_AdminLayouts.cshtml";
}

<div class="row my-2">
    <div class="col-md-10">
        @Html.ActionLink("Show List", "CoilList", null, new { @class = "btn btn-info btn-lg text-bold" })

    </div>
</div>


@using (Html.BeginForm("AddCoil", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <section class="content mt-3 ">
        <div class="row">
            <div class="col-md-8 mx-auto">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Enter Coil Detail</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label for="inputName">Grade</label>
                            <input type="text" id="inputName" name="Code" class="form-control">
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="inputName">CoilName</label>
                            <input type="text" id="inputName" name="CoilName" class="form-control">
                            @Html.ValidationMessageFor(model => model.CoilName, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="inputName">Thickness (mm)</label>
                            <input type="text" id="inputThickness" name="Thickness" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">

                            @Html.ValidationMessageFor(model => model.Thickness, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="inputName">Width (mm)</label>
                            <input type="text" id="inputWidth" name="Width" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
                            @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="inputName">Weight (Kg)</label>
                            <input type="text" id="inputWeight" name="Weight" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })

                        </div>



                        <div class="form-group">
                            <label for="inputName">Remark</label>
                            <input type="text" id="remark" name="remark" class="form-control">
                            @Html.ValidationMessageFor(model => model.remark, "", new { @class = "text-danger" })

                        </div>

                        <input type="hidden" id="inputType" name="AddFrom" value="Outside" class="form-control">

                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            
        </div>
        <div class="row">
            <div class="col-md-8 mx-auto  h-100 d-flex align-items-center justify-content-center">
                <a href="@Url.Action("CircleCuttingMaster")" style="width:200px;" class="btn btn-secondary btn-lg">Cancel</a>
                &nbsp;&nbsp; &nbsp;&nbsp;   &nbsp;&nbsp; &nbsp;&nbsp;
                <input type="submit" style="width:200px" value="Save" class="btn btn-success btn-lg ">
            </div>
        </div>

    </section>
}